name: Build Meilisearch v1.19.1 on Rocky Linux 9 (Official Image)

on:
  workflow_dispatch:
    inputs:
      action:
        description: '触发类型'
        required: true
        default: 'build'
        enum: [build]

jobs:
  build-meilisearch:
    name: 编译 Meilisearch v1.19.1（Rocky Linux 9 官方镜像）
    container:
      image: rockylinux/rockylinux:9
    runs-on: ubuntu-latest

    steps:
      - name: 安装 EPEL 仓库（关键）
        run: |
          # 下载 EPEL 仓库 RPM 包
          wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
          
          # 安装 EPEL 仓库
          yum install -y ./epel-release-latest-9.noarch.rpm

      - name: 启用 EPEL 仓库
        run: |
          yum-config-manager --set-enabled epel

      - name: 安装基础工具（含 pkgconf-pkg-config）
        run: |
          yum update -y
          yum install -y yum-utils  # 包含 yum-config-manager
          
          # 安装 pkgconf-pkg-config（从 EPEL 仓库获取）
          yum install -y pkgconf-pkg-config
          
          # 安装其他必要依赖
          yum install -y \
            git \
            curl \
            gcc \
            make \
            cmake3 \
            openssl-devel \
            zlib-devel \
            which

      - name: 验证环境（关键工具检查）
        run: |
          # 检查 EPEL 仓库是否启用
          yum repolist enabled | grep epel  # 应输出 epel 仓库信息
          
          # 检查 pkg-config 是否可用
          pkg-config --version
          
          # 检查 curl 是否安装成功（避免冲突）
          curl --version


      # 后续步骤（Rust 安装、编译等）保持不变...

      - name: 安装 Rust 工具链
        uses: dtolnay/rust-toolchain@1.85
        with:
          toolchain: stable
          override: true
          components: rust-src, cargo, rustc-dev

      - name: 克隆并检出 Meilisearch 源码（v1.19.1）
        run: |
          git clone https://github.com/meilisearch/meilisearch.git
          cd meilisearch
          git checkout tags/v1.19.1

      - name: 配置编译环境
        run: |
          cd meilisearch
          # 指定目标平台（与容器架构一致）
          export TARGET=x86_64-unknown-linux-gnu

      - name: 编译发布版（禁用调试优化以加速）
        run: |
          cd meilisearch
          # 使用 --locked 确保依赖版本与源码一致
          cargo build --release --locked

      - name: 验证 GLIBC 依赖（确保无 GLIBC_2.35）
        run: |
          cd meilisearch/target/release
          ldd meilisearch | grep GLIBC_

      - name: 保存编译产物（GitHub Artifacts）
        uses: actions/upload-artifact@v4
        with:
          name: meilisearch-v1.19.1-linux-amd64-rocky9-official
          path: meilisearch/target/release/meilisearch
          retention-days: 7
