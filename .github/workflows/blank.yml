name: Build Meilisearch v1.19.1 on Rocky Linux 9

on:
  workflow_dispatch:
    inputs:
      action:
        description: '触发类型（仅 build）'
        required: true
        default: 'build'
        enum: [build]

jobs:
  build-meilisearch:
    name: 编译 Meilisearch v1.19.1（Rocky Linux 9）
    container:
      image: rockylinux/rockylinux:9
    runs-on: ubuntu-latest

    steps:
      ###########################
      # 步骤 1：安装基础工具（含 bash）
      ###########################
      - name: 安装基础工具（关键）
        run: |
          # 更新系统包索引
          yum update -y
          
          # 安装 bash（最小化镜像可能未预装）
          yum install -y bash
          
          # 安装其他编译必需工具
          yum install -y \
            git \
            gcc \
            make \
            cmake3 \
            openssl-devel \
            zlib-devel \
            which \
            yum-utils  # 包含 yum-config-manager

      ###########################
      # 步骤 2：验证 bash 可用性
      ###########################
      - name: 验证 bash 安装
        run: |
          # 检查 bash 是否安装成功（输出路径如 /usr/bin/bash）
          which bash
          
          # 检查 PATH 环境变量是否包含 bash 路径
          echo "PATH: $PATH"
          # 预期输出应包含 /usr/bin（bash 默认路径）

      ###########################
      # 步骤 3：安装 EPEL 仓库（依赖 bash）
      ###########################
      - name: 安装 EPEL 仓库
        run: |
          # 下载 EPEL 9 最新仓库包
          wget -q https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
          
          # 安装 EPEL 仓库
          yum install -y ./epel-release-latest-9.noarch.rpm

      ###########################
      # 步骤 4：启用 EPEL 仓库并安装 pkgconf-pkg-config
      ###########################
      - name: 启用 EPEL 仓库并安装 pkgconf-pkg-config
        run: |
          # 启用 EPEL 仓库
          yum-config-manager --set-enabled epel
          
          # 安装 pkgconf-pkg-config
          yum install -y pkgconf-pkg-config

      ###########################
      # 步骤 5：安装 Rust 工具链（修复 bash 依赖）
      ###########################
      - name: 安装 Rust 工具链（使用 rustup）
        run: |
          # 安装 rustup（Rust 工具链管理器）
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- \
            --default-toolchain 1.85.1 \
            --component rust-src \
            --component cargo \
            --component rustc-dev \
            --profile minimal \
            --no-self-update
          
          # 将 cargo 加入 PATH（可选，若 rustup 未自动配置）
          echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> ~/.bashrc
          source ~/.bashrc

      ###########################
      # 步骤 6：克隆并编译 Meilisearch 源码
      ###########################
      - name: 克隆并检出源码
        run: |
          git clone https://github.com/meilisearch/meilisearch.git
          cd meilisearch
          git checkout tags/v1.19.1

      - name: 配置编译环境
        run: |
          cd meilisearch
          export TARGET=x86_64-unknown-linux-gnu

      - name: 编译发布版
        run: |
          cd meilisearch
          cargo build --release --locked

      ###########################
      # 步骤 7：验证 GLIBC 依赖
      ###########################
      - name: 验证 GLIBC 依赖
        run: |
          cd meilisearch/target/release
          ldd meilisearch | grep GLIBC_

      ###########################
      # 步骤 8：保存编译产物
      ###########################
      - name: 保存编译产物
        uses: actions/upload-artifact@v4
        with:
          name: meilisearch-v1.19.1-linux-amd64-rocky9
          path: meilisearch/target/release/meilisearch
          retention-days: 7
